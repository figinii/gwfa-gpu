From e3d9d2675e9ec00f87f342982a4d949f84955e05 Mon Sep 17 00:00:00 2001
From: dwarf <dwarf@necst.polimi>
Date: Wed, 19 Mar 2025 13:52:13 +0100
Subject: [PATCH] feat: move sequence data to GPU

---
 firstAttempt/CMakeLists.txt                        | 10 ++++++----
 firstAttempt/include/charBasedGeneticStructures.cu |  7 ++++++-
 firstAttempt/include/graphStructure.h              |  3 +++
 firstAttempt/source/gwfa.hu                        |  3 ++-
 firstAttempt/source/{main.cpp => main.cu}          | 12 ++++++++----
 5 files changed, 25 insertions(+), 10 deletions(-)
 rename firstAttempt/source/{main.cpp => main.cu} (89%)

diff --git a/firstAttempt/CMakeLists.txt b/firstAttempt/CMakeLists.txt
index 14f11b3..d1ebe8f 100644
--- a/firstAttempt/CMakeLists.txt
+++ b/firstAttempt/CMakeLists.txt
@@ -1,5 +1,5 @@
 cmake_minimum_required (VERSION 3.20...3.31)
-project (firstAttempt CXX)
+project (firstAttempt CXX CUDA)
 
 message(STATUS cmakeDir: ${CMAKE_SOURCE_DIR})
 include_directories(
@@ -7,8 +7,10 @@ include_directories(
   ${CMAKE_SOURCE_DIR}/include
 )
 
-# find_package(CUDA REQUIRED)
+find_package(CUDA REQUIRED)
+include_directories(${CUDA_INCLUDE_DIRS})
+link_directories(${CUDA_TOOLKIT_ROOT_DIR}/lib64)
 
-add_executable (firstAttempt source/main.cpp)
+add_executable (firstAttempt source/main.cu)
 
-target_link_libraries (firstAttempt)
\ No newline at end of file
+target_link_libraries (firstAttempt ${CUDA_LIBRARIES})
\ No newline at end of file
diff --git a/firstAttempt/include/charBasedGeneticStructures.cu b/firstAttempt/include/charBasedGeneticStructures.cu
index d052a93..6150f10 100644
--- a/firstAttempt/include/charBasedGeneticStructures.cu
+++ b/firstAttempt/include/charBasedGeneticStructures.cu
@@ -3,6 +3,8 @@
 
 #include "geneticStructures.h"
 #include "lcp.h"
+#include <cuda_runtime.h>
+#include <iostream>
 
 class GeneticStrChar : public GeneticStr<GeneticStrChar> {
 private:
@@ -13,7 +15,7 @@ public:
 
   GeneticStrChar(){
     content = (char*) malloc(sizeof(char));
-    *content = (char) "\0";
+    *content = '\0';
     len = 0;
   }
 
@@ -33,7 +35,10 @@ public:
     cudaMemcpy(contentD, this->content, (this->len+1), cudaMemcpyHostToDevice);
 
     cudaMalloc((void**)ptr, sizeof(GeneticStrChar));
+    char* hostContent = this->content;
+    this->content = contentD;
     cudaMemcpy(*ptr, this, sizeof(GeneticStrChar), cudaMemcpyHostToDevice);
+    this->content = hostContent;
   }
 
   long lcp(long myIndex, GeneticStrChar* other, long otherIndex) const override {
diff --git a/firstAttempt/include/graphStructure.h b/firstAttempt/include/graphStructure.h
index 476d693..d4ca000 100644
--- a/firstAttempt/include/graphStructure.h
+++ b/firstAttempt/include/graphStructure.h
@@ -36,6 +36,9 @@ struct TrackedGeneticNode{
   GeneticNode<T>* genetic;
   long col;
   long diag;
+  
+  TrackedGeneticNode(GeneticNode<T>* geneticNode, long column, long diagonal)
+  : genetic(geneticNode), col(column), diag(diagonal) {}
 };
 
 template <typename T>
diff --git a/firstAttempt/source/gwfa.hu b/firstAttempt/source/gwfa.hu
index 15994b9..27a1bc4 100644
--- a/firstAttempt/source/gwfa.hu
+++ b/firstAttempt/source/gwfa.hu
@@ -1,8 +1,9 @@
 #include "geneticStructures.h"
 #include "graphStructure.h"
+#include <cuda_runtime.h>
 
 void __global__ test(GeneticStrChar* query){
-  printf("%s", query->content);
+  printf("%c", *query->content);
 }
 
 template <typename T>
diff --git a/firstAttempt/source/main.cpp b/firstAttempt/source/main.cu
similarity index 89%
rename from firstAttempt/source/main.cpp
rename to firstAttempt/source/main.cu
index 00439bd..34186a3 100644
--- a/firstAttempt/source/main.cpp
+++ b/firstAttempt/source/main.cu
@@ -1,10 +1,14 @@
-#include <iostream>
 #include "parsingFunctions.h"
 #include "charBasedGeneticStructures.cu"
 #include "gwfa.hu"
+#include <cuda_runtime.h>
+
+#include <iostream>
+#include <cstring>
 
 int main(int argc, char **argv)
 {
+  cudaSetDevice(1);
   if(argc < 3){
     std::cout << "Usage: " << argv[0] << "<sequenceFilePath.fa> " << " " 
                                                  << "<graphFilePath.fa> "   << std::endl;
@@ -14,12 +18,12 @@ int main(int argc, char **argv)
   // integeArray representation usage
   GeneticStrChar* sequence = new GeneticStrChar(parseFA(argv[1])[">read1"]);
   GeneticNode<GeneticStrChar>* first = parseGFA<GeneticStrChar>(argv[2]);
-  TrackedGeneticNode<GeneticStrChar>* t = new TrackedGeneticNode(first, 0, 0);
+  TrackedGeneticNode<GeneticStrChar>* t = new TrackedGeneticNode<GeneticStrChar>(first, 0, 0);
 
   GeneticStrChar* queryD;
   sequence->GeneticStrDeviceMove(&queryD);
-
-  test(queryD);
+  
+  test<<<1, 1>>>(queryD);
   cudaDeviceSynchronize();
 
   std::cout << t->col << std::endl;
-- 
2.34.1

